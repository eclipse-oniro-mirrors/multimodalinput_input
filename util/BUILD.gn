# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("../multimodalinput_mini.gni")

defines = input_default_defines

module_output_path = "multimodalinput/mmi_unit_out"

config("libmmi_util_public_config") {
  include_dirs = [
    "common/include",
    "network/include",
    "socket/include",
  ]
}

config("libmmi_util_config") {
  include_dirs = [
    "common/include",
    "network/include",
    "socket/include",
    "${mmi_path}/interfaces/native/innerkits/common/include",
    "${mmi_path}/interfaces/native/innerkits/event/include",
    "${mmi_path}/interfaces/native/innerkits/proxy/include",
  ]

  if (is_ohos && is_clang && (target_cpu == "arm" || target_cpu == "arm64") &&
      enhanced_opt) {
    cflags = []
    if (input_feature_enable_pgo && input_feature_product != "default") {
      cflags += [
        "-fprofile-use=" +
            rebase_path("${input_feature_pgo_path}/libmmi-util.profdata",
                        root_build_dir),
        "-Wno-error=backend-plugin",
        "-Wno-profile-instr-out-of-date",
        "-Wno-profile-instr-unprofiled",
      ]
    }
    if (input_feature_product == "pc" && target_cpu == "arm64") {
      cflags += [ "-moutline-atomics" ]
    }
  }
}

ohos_rust_shared_ffi("mmi_rust_key_config") {
  sources = [ "rust_key/src/lib.rs" ]
  external_deps = [ "hilog:hilog_rust" ]
  subsystem_name = "multimodalinput"
  part_name = "input"
}

ohos_rust_unittest("rust_mmi_key_config_test") {
  module_out_path = module_output_path
  sources = [ "rust_key/src/lib.rs" ]
  deps = [ ":mmi_rust_key_config" ]
  external_deps = [ "hilog:hilog_rust" ]
  subsystem_name = "multimodalinput"
  part_name = "input"
}

ohos_shared_library("libmmi-util") {
  sources = libmmi_util_sources
  public_configs = [
    ":libmmi_util_public_config",
    "${mmi_path}:coverage_flags",
  ]

  configs = [ ":libmmi_util_config" ]
  branch_protector_ret = "pac_ret"
  deps = [ ":mmi_rust_key_config" ]

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
  ]
  public_deps = [ "${mmi_path}/frameworks/proxy:libmmi-common" ]

  if (security_component_enable) {
    external_deps += [ "security_component_manager:libsecurity_component_sdk" ]
  }
  innerapi_tags = [ "platformsdk" ]
  part_name = "input"
  subsystem_name = "multimodalinput"
}

ohos_unittest("ut-mmi-util-out") {
  configs = [ "${mmi_path}:coverage_flags" ]
  module_out_path = module_output_path
  include_dirs = [
    "//third_party/googletest/googletest/include",
    "${mmi_path}/frameworks/proxy/event_handler",
    "${mmi_path}/frameworks/proxy/event_handler/include",
    "${mmi_path}/frameworks/proxy/module_loader",
    "${mmi_path}/frameworks/proxy/module_loader/include",
    "${mmi_path}/util/common",
    "${mmi_path}/util/common/include",
    "${mmi_path}/util/network",
    "${mmi_path}/util/network/include",
    "${mmi_path}/util/socket",
    "${mmi_path}/util/socket/include",
    "${mmi_path}/frameworks/proxy/event_handle",
    "${mmi_path}/frameworks/proxy/event_handle/include",
    "${mmi_path}/frameworks/proxy/module_loader",
    "${mmi_path}/frameworks/proxy/module_loader/include",
    "${mmi_path}/interfaces/native/innerkits/common/include",
    "${mmi_path}/interfaces/native/innerkits/proxy/include",
    "${mmi_path}/interfaces/native/innerkits/event/include",
    "$root_out_dir/diff_libinput_mmi/export_include",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  sources = [
    "network/test/circle_stream_buffer_test.cpp",
    "network/test/net_packet_test.cpp",
    "socket/test/stream_buffer_test.cpp",
    "socket/test/uds_client_test.cpp",
    "socket/test/uds_session_test.cpp",
    "socket/test/uds_socket_test.cpp",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]
  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "image_framework:image_native",
  ]
}
