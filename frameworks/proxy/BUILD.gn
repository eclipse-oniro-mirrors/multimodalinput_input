# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")
import("../../multimodalinput_mini.gni")

defines = input_default_defines

module_output_path = "input/input"

config("libmmi_client_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "${mmi_path}/interfaces/kits/c/input",
    "${mmi_path}/interfaces/native/innerkits/event/include",
    "${mmi_path}/interfaces/native/innerkits/proxy/include",
    "event_handler/include",
    "events/include",
    "module_loader/include",
  ]
}

config("libmmi_public_client_config") {
  include_dirs = [
    "${mmi_path}/common/anco/comm/include",
    "${mmi_path}/interfaces/native/innerkits",
    "${mmi_path}/interfaces/native/innerkits/event/include",
    "${mmi_path}/interfaces/native/innerkits/proxy/include",
    "${mmi_path}/util/common/include",
  ]

  if (input_ext_feature_anco) {
    include_dirs += [ "${mmi_ext_path}/anco_uds_manager/include" ]
  }
}

config("libmmi_test_util") {
  include_dirs = [
    "${mmi_path}/frameworks/proxy/event_handler/include",
    "${mmi_path}/frameworks/proxy/module_loader/include",
    "${mmi_path}/interfaces/native/innerkits/common/include",
    "${mmi_path}/interfaces/native/innerkits/proxy/include",
    "${mmi_path}/test/unittest/common/include",
    "${mmi_path}/util/network/include",
    "${mmi_path}/util/socket/include",
  ]
}

ohos_source_set("libmmi-common") {
  include_dirs = [
    "${mmi_path}/interfaces/native/innerkits/event/include",
    "${mmi_path}/interfaces/native/innerkits/proxy/include",
    "${mmi_path}/util/common/include",
  ]

  sources = libmmi_common_sources
  public_configs = [ ":libmmi_client_config" ]
  visibility = [ "${mmi_path}/*" ]
  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  external_deps = [
    "c_utils:utils",
    "ffrt:libffrt",
    "hilog:libhilog",
    "image_framework:image_native",
    "init:libbegetutil",
    "ipc:ipc_single",
  ]

  part_name = "input"
  subsystem_name = "multimodalinput"
}

if (is_arkui_x) {
  ohos_source_set("libmmi-client-crossplatform") {
    sources = libmmi_common_sources
    public_configs = [ ":libmmi_public_client_config" ]
    include_dirs = [
      "${c_utils_root}/base/include",
      "${mmi_path}/frameworks/proxy/events/include",
    ]

    if (input_feature_upgrade_skia) {
      defines += [ "USE_M133_SKIA" ]
    }
    if (target_os == "android") {
      defines += [ "ANDROID_PLATFORM" ]
    } else if (target_os == "ios") {
      defines += [ "IOS_PLATFORM" ]
    }

    deps = [
      "${hilog_root}/interfaces/native/innerkits:libhilog_${target_os}",
      "//foundation/multimedia/image_framework/interfaces/innerkits:image_native",
    ]

    part_name = "input"
    subsystem_name = "multimodalinput"
  }
}

ohos_shared_library("libmmi-client") {
  sources = libmmi_client_sources
  version_script = "${mmi_path}/interfaces/native/innerkits/libmmi-client-map"
  innerapi_tags = [ "platformsdk" ]
  branch_protector_ret = "pac_ret"

  sources += [ "event_handler/src/input_device_consumer.cpp" ]
  sources += [ "event_handler/src/tablet_event_input_subscribe_manager.cpp" ]
  if (input_feature_interceptor) {
    sources += [ "event_handler/src/input_interceptor_manager.cpp" ]
  }

  if (input_feature_monitor) {
    sources += [ "event_handler/src/input_monitor_manager.cpp" ]
  }

  if (input_feature_keyboard) {
    sources += [ "event_handler/src/key_event_input_subscribe_manager.cpp" ]
  }

  if (input_feature_switch) {
    sources += [ "event_handler/src/switch_event_input_subscribe_manager.cpp" ]
  }

  if (input_feature_key_hook) {
    sources += [ "event_handler/src/key_event_hook_handler.cpp" ]
  }

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_client_config",
    "${mmi_path}/util:libmmi_util_public_config",
    "${mmi_path}/service/filter:mmi_event_filter_config",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_config",
    "${mmi_path}/common/anco/comm:mmi_anco_channel_config",
  ]

  public_configs = [ ":libmmi_public_client_config" ]

  deps = [
    ":libmmi-common",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_proxy",
    "${mmi_path}/service/filter:mmi_event_filter_service",
    "${mmi_path}/util:libmmi-util",
  ]

  deps += [ "${mmi_path}/common/anco/comm:mmi_anco_channel_stub" ]

  part_name = "input"
  subsystem_name = "multimodalinput"
  external_deps = [
    "cJSON:cjson",
    "c_utils:utils",
    "config_policy:configpolicy_util",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "graphic_2d:2d_graphics",
    "hilog:libhilog",
    "image_framework:image_native",
    "init:libbegetutil",
    "ipc:ipc_single",
    "qos_manager:qos",
    "samgr:samgr_proxy",
  ]

  if (!is_arkui_x) {
    public_external_deps = [ "eventhandler:libeventhandler" ]
  }

  if (hitrace_enabled) {
    external_deps += [ "hitrace:hitrace_meter" ]
  }
}

ohos_unittest("ut-mmi-proxy-out") {
  module_out_path = module_output_path
  include_dirs = [ "$root_out_dir/diff_libinput_mmi/export_include" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  sources = [ "module_loader/test/mmi_client_test.cpp" ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
  ]
  external_deps = [
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]
}

ohos_unittest("KeyEventTest") {
  module_out_path = module_output_path
  include_dirs = [ "$root_out_dir/diff_libinput_mmi/export_include" ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  sources = [
    "${mmi_path}/test/unittest/common/src/event_util_test.cpp",
    "${mmi_path}/test/unittest/common/src/window_utils_test.cpp",
    "events/test/input_event_test.cpp",
    "events/test/key_event_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
  ]
  external_deps = [
    "ability_runtime:abilitykit_native",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_single",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}

ohos_unittest("InputHandlerManagerTest") {
  module_out_path = module_output_path

  include_dirs = []

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_client_config",
    "${mmi_path}/service:libmmi_server_config",
    "${mmi_path}/service/filter:mmi_event_filter_config",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_config",
    "${mmi_path}/common/anco/comm:mmi_anco_channel_config",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  sources = [
    "event_handler/src/anr_handler.cpp",
    "event_handler/src/input_handler_manager.cpp",
    "event_handler/test/input_handler_manager_test.cpp",
    "event_handler/test/scene_board_judgement_test.cpp",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/service:libmmi-server",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_proxy",
    "${mmi_path}/util:libmmi-util",
  ]

  external_deps = [
    "common_event_service:cesfwk_innerkits",
    "config_policy:configpolicy_util",
    "data_share:datashare_consumer",
    "drivers_interface_display:libdisplay_composer_hdi_impl_1.2",
    "drivers_interface_display:libdisplay_composer_proxy_1.0",
    "eventhandler:libeventhandler",
    "faultloggerd:libbacktrace_local",
    "ffrt:libffrt",
    "googletest:gtest_main",
    "graphic_2d:2d_graphics",
    "graphic_2d:libcomposer",
    "graphic_2d:librender_service_client",
    "graphic_2d:window_animation",
    "hdf_core:libhdi",
    "hicollie:libhicollie",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "image_framework:image_native",
    "init:libbeget_proxy",
    "init:libbegetutil",
    "ipc:ipc_single",
    "napi:ace_napi",
    "preferences:native_preferences",
    "safwk:system_ability_fwk",
    "samgr:samgr_proxy",
    "window_manager:libwm_lite",
    "window_manager:libwsutils",
  ]

  if (hitrace_enabled) {
    external_deps += [ "hitrace:hitrace_meter" ]
  }

  if (call_manager_service_enabled) {
    external_deps += [ "call_manager:tel_call_manager_api" ]
  }
}

ohos_unittest("SwitchEventInputSubscribeManagerTest") {
  module_out_path = module_output_path
  defines += [ "OHOS_BUILD_ENABLE_SWITCH" ]
  include_dirs = [
    "$root_out_dir/diff_libinput_mmi/export_include",
    "${mmi_path}/service/filter/include",
    "${mmi_path}/service/nap_process/include",
    "${mmi_path}/service/module_loader//include",
    "${mmi_path}/service/connect_manager/include",
  ]

  sources = [
    "event_handler/src/input_active_subscribe_manager.cpp",
    "event_handler/src/input_handler_manager.cpp",
    "event_handler/src/multimodal_event_handler.cpp",
    "event_handler/src/switch_event_input_subscribe_manager.cpp",
    "event_handler/src/tablet_event_input_subscribe_manager.cpp",
    "event_handler/test/switch_event_input_subscribe_manager_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
    "${mmi_path}/service/filter:mmi_event_filter_config",
    "${mmi_path}/common/anco/comm:mmi_anco_channel_config",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_config",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = true
    blocklist = "./ipc_blocklist.txt"
  }

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/frameworks/proxy:libmmi-common",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_proxy",
    "${mmi_path}/util:libmmi-util",
  ]
  external_deps = [
    "ability_runtime:abilitykit_native",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "cJSON:cjson",
    "c_utils:utils",
    "config_policy:configpolicy_util",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}

ohos_unittest("InputMonitorManagerTest") {
  module_out_path = module_output_path
  include_dirs = [
    "${mmi_path}/common/anco/comm/include",
    "${mmi_path}/service/connect_manager/include",
    "${mmi_path}/service/filter/include",
    "${mmi_path}/service/module_loader/include",
    "${mmi_path}/service/nap_process/include",
    "${mmi_path}/frameworks/proxy/event_handler/include",
  ]

  sources = [
    "event_handler/src/anr_handler.cpp",
    "event_handler/src/bytrace_adapter.cpp",
    "event_handler/src/input_handler_manager.cpp",
    "event_handler/src/input_manager_impl.cpp",
    "event_handler/src/key_event_input_subscribe_manager.cpp",
    "event_handler/src/long_press_event_subscribe_manager.cpp",
    "event_handler/src/multimodal_event_handler.cpp",
    "event_handler/src/pre_monitor_manager.cpp",
    "event_handler/src/tablet_event_input_subscribe_manager.cpp",
    "event_handler/test/input_monitor_manager_test.cpp",
    "event_handler/test/tablet_event_input_subscribe_manager_test.cpp",
  ]

  if (input_feature_switch) {
    sources += [ "event_handler/src/switch_event_input_subscribe_manager.cpp" ]
  }

  if (input_ext_feature_anco) {
    sources += [ "${mmi_ext_path}/anco_uds_manager/src/input_manager_ext.cpp" ]
  }

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
    "${mmi_path}/service/filter:mmi_event_filter_config",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_config",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${mmi_path}/common/anco/comm:mmi_anco_channel_stub",
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/frameworks/proxy:libmmi-common",
    "${mmi_path}/service:libmmi-server",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_proxy",
    "${mmi_path}/service/filter:mmi_event_filter_service",
    "${mmi_path}/util:libmmi-util",
  ]

  external_deps = [
    "ability_runtime:abilitykit_native",
    "cJSON:cjson",
    "c_utils:utils",
    "config_policy:configpolicy_util",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}

ohos_unittest("InputManagerImplTest") {
  module_out_path = module_output_path
  include_dirs = [
    "${mmi_path}/common/anco/comm/include",
    "${mmi_path}/service/connect_manager/include",
    "${mmi_path}/service/filter/include",
    "${mmi_path}/service/module_loader/include",
    "${mmi_path}/service/nap_process/include",
    "${mmi_path}/frameworks/proxy/event_handler/include",
  ]

  sources = [
    "event_handler/src/anr_handler.cpp",
    "event_handler/src/bytrace_adapter.cpp",
    "event_handler/src/input_active_subscribe_manager.cpp",
    "event_handler/src/input_handler_manager.cpp",
    "event_handler/src/input_manager_impl.cpp",
    "event_handler/src/key_event_input_subscribe_manager.cpp",
    "event_handler/src/long_press_event_subscribe_manager.cpp",
    "event_handler/src/multimodal_event_handler.cpp",
    "event_handler/src/pre_monitor_manager.cpp",
    "event_handler/src/switch_event_input_subscribe_manager.cpp",
    "event_handler/src/tablet_event_input_subscribe_manager.cpp",
    "event_handler/test/input_manager_impl_test.cpp",
    "event_handler/test/pre_monitor_manager_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
    "${mmi_path}/service/filter:mmi_event_filter_config",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_config",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${mmi_path}/common/anco/comm:mmi_anco_channel_stub",
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/frameworks/proxy:libmmi-common",
    "${mmi_path}/service:libmmi-server",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_proxy",
    "${mmi_path}/service/filter:mmi_event_filter_service",
    "${mmi_path}/util:libmmi-util",
  ]

  external_deps = [
    "ability_runtime:abilitykit_native",
    "cJSON:cjson",
    "c_utils:utils",
    "config_policy:configpolicy_util",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]

  if (hitrace_enabled) {
    external_deps += [ "hitrace:hitrace_meter" ]
  }
}

ohos_unittest("InputManagerTest") {
  module_out_path = module_output_path
  include_dirs = [
    "${mmi_path}/frameworks/proxy/events/test",
    "${mmi_path}/frameworks/proxy/event_handler/include",
    "$root_out_dir/diff_libinput_mmi/export_include",
    "${mmi_path}/service/filter/include",
  ]

  sources = [
    "${mmi_path}/test/unittest/common/src/event_util_test.cpp",
    "${mmi_path}/test/unittest/common/src/system_info.cpp",
    "${mmi_path}/test/unittest/common/src/window_utils_test.cpp",
    "events/src/input_manager_util.cpp",
    "events/test/input_manager_simulate_test.cpp",
    "events/test/input_manager_test.cpp",
    "events/test/input_manager_update_display_info_test.cpp",
    "events/test/virtual_input_device_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  branch_protector_ret = "pac_ret"
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = true
    blocklist = "./ipc_blocklist.txt"
  }

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/frameworks/proxy:libmmi-common",
    "${mmi_path}/util:libmmi-util",
  ]
  external_deps = [
    "ability_runtime:abilitykit_native",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "cJSON:cjson",
    "c_utils:utils",
    "config_policy:configpolicy_util",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "image_framework:image_native",
    "init:libbegetutil",
    "ipc:ipc_single",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}

ohos_unittest("InputManagerInjectTest") {
  module_out_path = module_output_path
  include_dirs = [
    "${mmi_path}/frameworks/proxy/events/test",
    "${mmi_path}/frameworks/proxy/event_handler/include",
    "$root_out_dir/diff_libinput_mmi/export_include",
    "${mmi_path}/service/filter/include",
  ]

  sources = [
    "${mmi_path}/test/unittest/common/src/event_util_test.cpp",
    "${mmi_path}/test/unittest/common/src/system_info.cpp",
    "${mmi_path}/test/unittest/common/src/window_utils_test.cpp",
    "events/src/input_manager_util.cpp",
    "events/test/input_manager_inject_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
    "${mmi_path}/frameworks/proxy:libmmi-common",
  ]

  external_deps = [
    "ability_runtime:abilitykit_native",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "image_framework:image_native",
    "init:libbegetutil",
    "ipc:ipc_single",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}

ohos_unittest("InputManagerManualTest") {
  module_out_path = module_output_path

  sources = [ "events/test/input_manager_manual_test.cpp" ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
  ]
  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]
}

ohos_unittest("InputManagerFilterManualTest") {
  module_out_path = module_output_path

  sources = [ "events/test/input_manager_filter_manual_test.cpp" ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
  ]
  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]
}

ohos_unittest("KeyEventInputSubscribeManagerTest") {
  module_out_path = module_output_path
  include_dirs = [ "${mmi_path}/frameworks/proxy/event_handler/include" ]

  sources = [ "event_handler/test/key_event_input_subscribe_manager_test.cpp" ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/service:libmmi-server",
    "${mmi_path}/util:libmmi-util",
  ]

  external_deps = [
    "ability_runtime:abilitykit_native",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
  ]
}

ohos_unittest("LongPressEventSubscribeManagerTest") {
  module_out_path = module_output_path
  include_dirs = [ "${mmi_path}/frameworks/proxy/event_handler/include" ]

  sources = [
    "event_handler/src/long_press_event_subscribe_manager.cpp",
    "event_handler/test/long_press_event_subscribe_manager_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
  ]

  external_deps = [
    "ability_runtime:abilitykit_native",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
  ]
}

ohos_unittest("InputDeviceImplTest") {
  module_out_path = module_output_path
  include_dirs = [ "${mmi_path}/frameworks/proxy/event_handler/include" ]

  sources = [
    #"event_handler/src/input_device_impl.cpp",
    "event_handler/test/client_msg_handler_test.cpp",
    "event_handler/test/input_device_impl_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
  ]

  external_deps = [
    "ability_runtime:abilitykit_native",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
  ]
}

ohos_unittest("PointerEventTest") {
  module_out_path = module_output_path
  include_dirs = [ "$root_out_dir/diff_libinput_mmi/export_include" ]

  sources = [
    "${mmi_path}/test/unittest/common/src/event_util_test.cpp",
    "${mmi_path}/test/unittest/common/src/window_utils_test.cpp",
    "events/test/pointer_event_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
  ]
  external_deps = [
    "ability_runtime:abilitykit_native",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "image_framework:image_native",
    "ipc:ipc_single",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}

ohos_unittest("PointerEventExTest") {
  module_out_path = module_output_path
  include_dirs = [ "$root_out_dir/diff_libinput_mmi/export_include" ]

  sources = [ "events/test/pointer_event_ex_test.cpp" ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
    "${mmi_path}/frameworks/proxy:libmmi-common",
  ]

  external_deps = [
    "ability_runtime:abilitykit_native",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "image_framework:image_native",
    "ipc:ipc_single",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}

ohos_unittest("PointerStyleTest") {
  module_out_path = module_output_path
  include_dirs = [ "${mmi_path}/frameworks/proxy/event_handler/include" ]

  sources = [
    "events/src/pointer_style.cpp",
    "events/test/pointer_style_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
  ]

  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
  ]
  external_deps = [
    "ability_runtime:abilitykit_native",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "image_framework:image_native",
    "ipc:ipc_single",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}

ohos_unittest("KeyEventHookHandlerTest") {
  module_out_path = module_output_path
  include_dirs = [
    "${mmi_path}/common/anco/comm/include",
    "${mmi_path}/service/connect_manager/include",
    "${mmi_path}/service/filter/include",
    "${mmi_path}/service/module_loader/include",
    "${mmi_path}/service/nap_process/include",
    "${mmi_path}/service/event_hook/include",
    "${mmi_path}/frameworks/proxy/event_handler/include",
  ]
 
  sources = [
    "event_handler/src/anr_handler.cpp",
    "event_handler/src/bytrace_adapter.cpp",
    "event_handler/src/input_handler_manager.cpp",
    "event_handler/src/input_manager_impl.cpp",
    "event_handler/src/key_event_input_subscribe_manager.cpp",
    "event_handler/src/long_press_event_subscribe_manager.cpp",
    "event_handler/src/multimodal_event_handler.cpp",
    "event_handler/src/pre_monitor_manager.cpp",
    "event_handler/src/tablet_event_input_subscribe_manager.cpp",
    "event_handler/src/key_event_hook_handler.cpp",
    "event_handler/test/input_monitor_manager_test.cpp",
    "event_handler/test/key_event_hook_handler_test.cpp",
    "event_handler/test/tablet_event_input_subscribe_manager_test.cpp",
  ]
 
  if (input_feature_switch) {
    sources += [ "event_handler/src/switch_event_input_subscribe_manager.cpp" ]
  }
 
  if (input_ext_feature_anco) {
    sources += [ "${mmi_ext_path}/anco_uds_manager/src/input_manager_ext.cpp" ]
  }
 
  configs = [
    "${mmi_path}:coverage_flags",
    ":libmmi_test_util",
    "${mmi_path}/service/filter:mmi_event_filter_config",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_config",
  ]
 
  cflags = [
    "-Dprivate=public",
    "-Dprotected=public",
  ]
 
  deps = [
    "${mmi_path}/common/anco/comm:mmi_anco_channel_stub",
    "${mmi_path}/frameworks/proxy:libmmi-common",
    "${mmi_path}/service:libmmi-server",
    "${mmi_path}/service/connect_manager:mmi_connect_manager_proxy",
    "${mmi_path}/service/filter:mmi_event_filter_service",
    "${mmi_path}/util:libmmi-util",
    "${mmi_path}/frameworks/proxy:libmmi-client",
  ]
 
  external_deps = [
    "ability_runtime:abilitykit_native",
    "cJSON:cjson",
    "c_utils:utils",
    "config_policy:configpolicy_util",
    "eventhandler:libeventhandler",
    "ffrt:libffrt",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_single",
    "samgr:samgr_proxy",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}

ohos_unittest("PointerEventNdkTest") {
  module_out_path = module_output_path
  include_dirs = [
    "${mmi_path}/frameworks/native/input/include",
    "${mmi_path}/interfaces/kits/c/input",
    "${mmi_path}/service/connect_manager/include",
    "${mmi_path}/service/filter/include",
    "${mmi_path}/service/module_loader/include",
    "${mmi_path}/service/nap_process/include",
    "${mmi_path}/service/permission_helper/include",
  ]

  sources = [
    "${mmi_path}/frameworks/native/input/oh_input_device_listener.cpp",
    "${mmi_path}/frameworks/native/input/oh_input_interceptor.cpp",
    "${mmi_path}/frameworks/native/input/oh_input_manager.cpp",
    "${mmi_path}/frameworks/native/input/test/oh_input_manager_test.cpp",
    "${mmi_path}/service/permission_helper/src/permission_helper.cpp",
    "events/test/pointer_event_ndk_test.cpp",
  ]

  configs = [
    "${mmi_path}:coverage_flags",
    "${mmi_path}/frameworks/proxy:libmmi_test_util",
    "${mmi_path}/service/filter:mmi_event_filter_config",
    "${mmi_path}/common/anco/comm:mmi_anco_channel_config",
  ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
    "${mmi_path}/frameworks/proxy:libmmi-common",
  ]

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "access_token:libprivacy_sdk",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "init:libbegetutil",
    "ipc:ipc_single",
  ]

  if (enable_player_framework) {
    external_deps += [ "player_framework:media_client" ]
  }
}
