# Copyright (c) 2021-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("../../../../multimodalinput_mini.gni")

module_output_path = "input/input"

ohos_unittest("InputManagerAncoTest") {
  module_out_path = module_output_path

  defines = input_default_defines

  sources = [ "input_manager_anco_test.cpp" ]

  configs = [ "${mmi_path}:coverage_flags" ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
  ]

  external_deps = [
    "ability_runtime:abilitykit_native",
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken_shared",
    "access_token:libtokensetproc_shared",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "image_framework:image_native",
    "ipc:ipc_single",
    "window_manager:libwm",
    "window_manager:libwsutils",
  ]
}

ohos_unittest("InputManagerInterceptorTest") {
  module_out_path = module_output_path
  defines = input_default_defines

  configs = [ "${mmi_path}:coverage_flags" ]

  sources = [ "input_manager_interceptor_test.cpp" ]

  deps = [
    "${mmi_path}/frameworks/proxy:libmmi-client",
    "${mmi_path}/util:libmmi-util",
  ]

  external_deps = [
    "c_utils:utils",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_single",
  ]
}

group("FrameworkEventTests") {
  testonly = true

  deps = []

  if (input_ext_feature_anco) {
    deps += [ "${mmi_path}/frameworks/proxy/events/test:InputManagerAncoTest" ]
  }

  if (input_feature_interceptor) {
    deps += [ "${mmi_path}/frameworks/proxy/events/test:InputManagerInterceptorTest" ]
  }
}
